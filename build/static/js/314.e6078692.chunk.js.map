{"version":3,"file":"static/js/314.e6078692.chunk.js","mappings":"2LAmJA,QA7IA,WACE,MAAMA,GAAWC,EAAAA,EAAAA,OACVC,EAAUC,IAAeC,EAAAA,EAAAA,UAAS,KAClCC,EAAYC,IAAiBF,EAAAA,EAAAA,UAAS,KAE7CG,EAAAA,EAAAA,YAAU,KACUC,EAAAA,EAAQC,IAAI,UAG5BT,EAAS,UACX,GACC,CAACA,KAEJO,EAAAA,EAAAA,YAAU,KAER,MAAMG,EAAQC,aAAaC,QAAQ,aACpCC,QAAQC,IAAIJ,GACXK,EAAAA,EAAMN,IAAI,gDAAiD,CACzDO,QAAS,CACP,cAAiB,UAAUN,IAC3B,eAAgB,sBAGnBO,MAAKC,IACJf,EAAYe,EAASC,KAAK,IAE3BC,OAAMC,IACLR,QAAQQ,MAAM,wCAAyCA,GACnDA,EAAMH,UAAsC,MAA1BG,EAAMH,SAASI,QAEnCtB,EAAS,UACX,GACA,GACD,CAACA,IAGJ,MAAMuB,EAAU,CACd,CACEC,KAAM,aACNC,SAAUC,GAAOA,EAAIC,UAAUC,WAC/BC,UAAU,GAEZ,CACEL,KAAM,uBACNC,SAAUC,GAAOA,EAAII,oBACrBD,UAAU,GAEZ,CACEL,KAAM,kBACNC,SAAUC,GAAOA,EAAIK,eACrBF,UAAU,GAEZ,CACEL,KAAM,QACNC,SAAUC,GAAOA,EAAIM,MACrBH,UAAU,GAEZ,CACEL,KAAM,gBACNC,SAAUC,GAAOA,EAAIO,aACrBJ,UAAU,EACVK,OAAQR,GAAO,IAAIS,KAAKT,EAAIO,cAAcG,sBAE5C,CACEZ,KAAM,aACNC,SAAUC,GAAOA,EAAIW,SAAST,WAC9BC,UAAU,IAKRS,EAAepC,EAASqC,QAAOC,IACnC,MAAMC,EAAuBpC,EAAWqC,OAAOC,cAG/C,OAEEH,EAAKb,UAAUC,WAAWe,cAAcC,SAASH,IAGjDD,EAAKH,SAAST,WAAWe,cAAcC,SAASH,IAG/CD,EAAKV,qBAAuBU,EAAKV,oBAAoBa,cAAcC,SAASH,IAG5ED,EAAKT,gBAAkBS,EAAKT,eAAeY,cAAcC,SAASH,IAGlED,EAAKR,OAASQ,EAAKR,MAAMW,cAAcC,SAASH,IAGhDD,EAAKP,cAAgB,IAAIE,KAAKK,EAAKP,cAAcG,qBAAqBO,cAAcC,SAASH,EAAsB,IAIxH,OACEI,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,UACEF,EAAAA,EAAAA,KAAA,OAAKG,UAAU,eAAcD,UAC3BE,EAAAA,EAAAA,MAAA,QAAAF,SAAA,EACEE,EAAAA,EAAAA,MAAA,OAAKD,UAAU,cAAaD,SAAA,EAC1BF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,eACJF,EAAAA,EAAAA,KAAA,SAAAE,SAAO,yBAETE,EAAAA,EAAAA,MAAA,OAAKD,UAAU,eAAcD,SAAA,EAE3BF,EAAAA,EAAAA,KAAA,OAAKG,UAAU,aAAaE,MAAO,CAAEC,aAAc,QAASJ,UAC1DF,EAAAA,EAAAA,KAAA,SACEO,KAAK,OACLC,YAAY,6DACZC,MAAOjD,EACPkD,SAAWC,GAAMlD,EAAckD,EAAEC,OAAOH,OACxCJ,MAAO,CACLQ,QAAS,OACTC,MAAO,OACPC,SAAU,QACVT,aAAc,OACdU,aAAc,MACdC,OAAQ,uBAMdjB,EAAAA,EAAAA,KAACkB,EAAAA,GAAS,CACRC,MAAM,eACNzC,QAASA,EACTJ,KAAMmB,EACN2B,YAAU,EACVC,kBAAgB,EAChBC,SAAO,EACPC,YAAU,EACVC,UAAUxB,EAAAA,EAAAA,KAAA,QAAMG,UAAU,YAAYE,MAAO,CAAEoB,SAAU,OAAQC,MAAO,WAAYxB,SAAC,sBAOnG,C","sources":["Pages/Admin/AdminDashboard.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport DataTable from 'react-data-table-component';\r\nimport axios from 'axios';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport Cookies from 'js-cookie';\r\n\r\nfunction AdminDashboard() {\r\n  const navigate = useNavigate();\r\n  const [bookings, setBookings] = useState([]);\r\n  const [searchText, setSearchText] = useState('');\r\n\r\n  useEffect(() => {\r\n    const userEmail = Cookies.get('xyzra');\r\n    if (!userEmail) {\r\n\r\n      navigate('/signin');\r\n    }\r\n  }, [navigate]);\r\n\r\n  useEffect(() => {\r\n    // Get the JWT token from wherever you store it (localStorage, cookies, etc.)\r\n    const token = localStorage.getItem('jwt_token'); // or Cookies.get('jwt_token');\r\n   console.log(token)\r\n    axios.get('https://localhost:7009/api/Home/GetBookedData', {\r\n      headers: {\r\n        'Authorization': `Bearer ${token}`,\r\n        'Content-Type': 'application/json'\r\n      }\r\n    })\r\n    .then(response => {\r\n      setBookings(response.data);\r\n    })\r\n    .catch(error => {\r\n      console.error('There was an error fetching the data!', error);\r\n      if (error.response && error.response.status === 401) {\r\n        // Redirect to login if unauthorized\r\n        navigate('/signin');\r\n      }\r\n    });\r\n  }, [navigate]);\r\n\r\n  // Columns for the DataTable\r\n  const columns = [\r\n    {\r\n      name: 'Booking ID',\r\n      selector: row => row.bookingId.toString(), // Convert to string\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'Starting Destination',\r\n      selector: row => row.startingDestination,\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'End Destination',\r\n      selector: row => row.endDestination,\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'Phone',\r\n      selector: row => row.phone,\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'Starting Date',\r\n      selector: row => row.startingDate,\r\n      sortable: true,\r\n      format: row => new Date(row.startingDate).toLocaleDateString(),\r\n    },\r\n    {\r\n      name: 'No of Days',\r\n      selector: row => row.noOfDays.toString(), // Convert to string\r\n      sortable: true,\r\n    },\r\n  ];\r\n\r\n  // Normalize and filter the data based on the search text\r\n  const filteredData = bookings.filter(item => {\r\n    const normalizedSearchText = searchText.trim().toLowerCase(); // Normalize the search text\r\n\r\n    // Search logic for all fields, treating everything as a string for comparison\r\n    return (\r\n      // Search by BookingId (converted to string)\r\n      item.bookingId.toString().toLowerCase().includes(normalizedSearchText) ||\r\n\r\n      // Search by NoOfDays (converted to string)\r\n      item.noOfDays.toString().toLowerCase().includes(normalizedSearchText) ||\r\n\r\n      // Search by Starting Destination\r\n      (item.startingDestination && item.startingDestination.toLowerCase().includes(normalizedSearchText)) ||\r\n      \r\n      // Search by End Destination\r\n      (item.endDestination && item.endDestination.toLowerCase().includes(normalizedSearchText)) ||\r\n      \r\n      // Search by Phone number\r\n      (item.phone && item.phone.toLowerCase().includes(normalizedSearchText)) ||\r\n\r\n      // Search by Starting Date (Properly formatted date check)\r\n      (item.startingDate && new Date(item.startingDate).toLocaleDateString().toLowerCase().includes(normalizedSearchText))\r\n    );\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <div className=\"main-content\">\r\n        <main>\r\n          <div className=\"page-header\">\r\n            <h1>Dashboard</h1>\r\n            <small>Home / Dashboard</small>\r\n          </div>\r\n          <div className=\"page-content\">\r\n            {/* Search Input */}\r\n            <div className=\"search-bar\" style={{ marginBottom: '20px' }}>\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Search by booking ID, destinations, phone, date or days...\"\r\n                value={searchText}\r\n                onChange={(e) => setSearchText(e.target.value)}\r\n                style={{\r\n                  padding: '10px',\r\n                  width: '100%',\r\n                  maxWidth: '300px',\r\n                  marginBottom: '20px',\r\n                  borderRadius: '5px',\r\n                  border: '1px solid #ddd',\r\n                }}\r\n              />\r\n            </div>\r\n\r\n            {/* DataTable */}\r\n            <DataTable\r\n              title=\"Booking Data\"\r\n              columns={columns}\r\n              data={filteredData} // Apply the filtered data\r\n              pagination\r\n              highlightOnHover\r\n              striped\r\n              responsive\r\n              sortIcon={<span className=\"sort-icon\" style={{ fontSize: '18px', color: '#007bff' }}>â‡…</span>} // Custom sorting icon\r\n            />\r\n          </div>\r\n        </main>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default AdminDashboard;\r\n"],"names":["navigate","useNavigate","bookings","setBookings","useState","searchText","setSearchText","useEffect","Cookies","get","token","localStorage","getItem","console","log","axios","headers","then","response","data","catch","error","status","columns","name","selector","row","bookingId","toString","sortable","startingDestination","endDestination","phone","startingDate","format","Date","toLocaleDateString","noOfDays","filteredData","filter","item","normalizedSearchText","trim","toLowerCase","includes","_jsx","_Fragment","children","className","_jsxs","style","marginBottom","type","placeholder","value","onChange","e","target","padding","width","maxWidth","borderRadius","border","DataTable","title","pagination","highlightOnHover","striped","responsive","sortIcon","fontSize","color"],"sourceRoot":""}