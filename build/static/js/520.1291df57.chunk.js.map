{"version":3,"file":"static/js/520.1291df57.chunk.js","mappings":"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","sources":["Pages/Security/ForgetPassword.jsx"],"sourcesContent":["import React, { useState,useEffect  } from \"react\";\r\nimport axios from \"axios\";\r\nimport Swal from \"sweetalert2\";\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useFormik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport Cookies from 'js-cookie';\r\n\r\nfunction ForgetPassword() {\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    const userEmail = Cookies.get('xyzra'); // Get the email cookie\r\n    if (!userEmail) {\r\n      // If no cookie, redirect to login\r\n      navigate('/signin');\r\n    }\r\n  }, [navigate]);\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      email: '',\r\n      password: '',\r\n      otp: ''\r\n    },\r\n    validationSchema: Yup.object({\r\n      email: Yup.string().email('Invalid email format').required('Email is required.'),\r\n      password: Yup.string().required('Password is required.'),\r\n      otp: Yup.string().required('OTP is required.')\r\n    })\r\n  });\r\n\r\n  const [email, setEmail] = useState(\"\");\r\n  const [otp, setOtp] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [isEmailDisabled, setIsEmailDisabled] = useState(false);\r\n  const [isOtpDisabled, setIsOtpDisabled] = useState(true);\r\n  const [isPasswordInputVisible, setIsPasswordInputVisible] = useState(false);\r\n  const [actualotp, actualsetotp] = useState(\"\");\r\n\r\n  const handleEmailSubmit = async () => {\r\n    try {\r\n      const response = await axios.post(`https://localhost:7009/api/Home/verifyemail/${email}`);\r\n      if (response.status === 200) {\r\n        Swal.fire(\"Success\", \"Email verified! Please enter the OTP sent to your email.\", \"success\");\r\n        setIsEmailDisabled(true);\r\n        setIsOtpDisabled(false);\r\n        setIsPasswordInputVisible(false);\r\n        actualsetotp(response.data.otp);\r\n      }\r\n    } catch (error) {\r\n      Swal.fire(\"Error\", error.response?.data?.message || \"Failed to verify email. Try again.\", \"error\");\r\n    }\r\n  };\r\n\r\n  const handleOtpSubmit = async () => {\r\n    try {\r\n      const response = await axios.post(`https://localhost:7009/api/Home/verifyotp/${otp}/${actualotp}`);\r\n      if (response.status === 200) {\r\n        Swal.fire(\"Success\", \"OTP verified! Please enter your new password.\", \"success\");\r\n        setIsOtpDisabled(true);\r\n        setIsPasswordInputVisible(true);\r\n      }\r\n    } catch (error) {\r\n      Swal.fire(\"Error\", error.response?.data?.message || \"Invalid OTP. Try again.\", \"error\");\r\n    }\r\n  };\r\n\r\n  const handlePasswordSubmit = async () => {\r\n    try {\r\n      const response = await axios.post(`https://localhost:7009/api/Home/resetpassword/${email}/${password}`);\r\n      if (response.status === 200) {\r\n        Swal.fire(\"Success\", \"Password reset successfully!\", \"success\");\r\n        navigate(`/signin`);\r\n      }\r\n    } catch (error) {\r\n      Swal.fire(\"Error\", error.response?.data?.message || \"Failed to reset password. Try again.\", \"error\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"body\">\r\n      <div className=\"forget-password-container\">\r\n        <h1>Forgot Password</h1>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"email\">Email:</label>\r\n          <input\r\n            type=\"email\"\r\n            id=\"email\"\r\n            name=\"email\"\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n            disabled={isEmailDisabled}\r\n            required\r\n            \r\n          />\r\n          {formik.touched.email && formik.errors.email ? (\r\n            <div className=\"error\">{formik.errors.email}</div>\r\n          ) : null}\r\n\r\n          {!isEmailDisabled && (\r\n            <button onClick={handleEmailSubmit} className=\"btn-primary\">\r\n              Verify Email\r\n            </button>\r\n          )}\r\n        </div>\r\n\r\n        {isOtpDisabled === false && (\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"otp\">OTP:</label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"otp\"\r\n              name=\"otp\"\r\n              value={otp}\r\n              onChange={(e) => setOtp(e.target.value)}\r\n              disabled={isOtpDisabled}\r\n              required\r\n            />\r\n            {formik.touched.otp && formik.errors.otp ? (\r\n              <div className=\"error\">{formik.errors.otp}</div>\r\n            ) : null}\r\n\r\n            {!isOtpDisabled && (\r\n              <button onClick={handleOtpSubmit} className=\"btn-primary\">\r\n                Verify OTP\r\n              </button>\r\n            )}\r\n          </div>\r\n        )}\r\n\r\n        {isPasswordInputVisible && (\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"password\">New Password:</label>\r\n            <input\r\n              type=\"password\"\r\n              id=\"password\"\r\n              name=\"password\"\r\n              value={password}\r\n              onChange={(e) => setPassword(e.target.value)}\r\n              required\r\n            />\r\n            {formik.touched.password && formik.errors.password ? (\r\n              <div className=\"error\">{formik.errors.password}</div>\r\n            ) : null}\r\n            <button onClick={handlePasswordSubmit} className=\"btn-primary\">\r\n              Reset Password\r\n            </button>\r\n          </div>\r\n        )}\r\n\r\n        <style>{`\r\n          .error {\r\n            color: red;\r\n            font-size: 0.9rem;\r\n            margin-top: 5px;\r\n          }\r\n          .body {\r\n            font-family: 'Poppins', Arial, sans-serif;\r\n            background: linear-gradient(135deg, #3498db, #8e44ad);\r\n            display: flex;\r\n            justify-content: center;\r\n            align-items: center;\r\n            height: 100vh;\r\n            overflow: hidden;\r\n          }\r\n          .forget-password-container {\r\n            width: 100%;\r\n            max-width: 400px;\r\n            margin: 0 auto;\r\n            padding: 20px;\r\n            border: 1px solid #ddd;\r\n            border-radius: 8px;\r\n            background: #f9f9f9;\r\n            box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);\r\n          }\r\n          h1 {\r\n            text-align: center;\r\n            margin-bottom: 20px;\r\n            color: #333;\r\n          }\r\n          .form-group {\r\n            margin-bottom: 15px;\r\n          }\r\n          label {\r\n            display: block;\r\n            margin-bottom: 5px;\r\n            font-size: 1rem;\r\n            color: #555;\r\n          }\r\n          input {\r\n            width: 100%;\r\n            padding: 10px;\r\n            border: 1px solid #ddd;\r\n            border-radius: 5px;\r\n            font-size: 1rem;\r\n          }\r\n          .btn-primary {\r\n            margin-top: 10px;\r\n            width: 100%;\r\n            padding: 10px;\r\n            border: none;\r\n            border-radius: 5px;\r\n            background: #3498db;\r\n            color: #fff;\r\n            font-size: 1rem;\r\n            cursor: pointer;\r\n          }\r\n          .btn-primary:hover {\r\n            background: #2980b9;\r\n          }\r\n        `}</style>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ForgetPassword;\r\n"],"names":["navigate","useNavigate","useEffect","Cookies","get","formik","useFormik","initialValues","email","password","otp","validationSchema","Yup","required","setEmail","useState","setOtp","setPassword","isEmailDisabled","setIsEmailDisabled","isOtpDisabled","setIsOtpDisabled","isPasswordInputVisible","setIsPasswordInputVisible","actualotp","actualsetotp","_jsx","className","children","_jsxs","htmlFor","type","id","name","value","onChange","e","target","disabled","touched","errors","onClick","async","response","axios","post","status","Swal","data","error","_error$response","_error$response$data","message","_error$response2","_error$response2$data","_error$response3","_error$response3$data"],"sourceRoot":""}