{"version":3,"file":"static/js/825.180e1ba5.chunk.js","mappings":"mNA8RA,QAtRA,WACE,MAAMA,GAAWC,EAAAA,EAAAA,MACXC,GAASC,EAAAA,EAAAA,IAAU,CACvBC,cAAe,CACbC,MAAO,GACPC,SAAU,IAEZC,iBAAkBC,EAAAA,GAAW,CAC3BH,MAAOG,EAAAA,KAAaC,SAAS,sBAC7BH,SAAUE,EAAAA,KAAaC,SAAS,2BAElCC,SAAUC,MAAOC,EAAMC,KAAqB,IAAnB,UAAEC,GAAWD,EACpC,IACE,MAAME,QAAiBC,EAAAA,EAAMC,KAAK,yCAA0CL,GAC5E,GAAwB,MAApBG,EAASG,OAAgB,CAC3B,MAAMC,EAAeC,KAAKR,EAAOP,OAGjCgB,EAAAA,EAAQC,IAAI,QAASH,EAAc,CAAEI,QAAS,EAAGC,QAAQ,IAExDC,aAAaC,QAAQ,YAAaX,EAASY,KAAKC,OACjDC,IAAAA,KAAU,CACRC,SAAU,SACVC,KAAM,UACNC,MAAO,mBACPC,mBAAmB,EACnBC,MAAO,OAETpB,IAGAd,EAAS,kBAEX,MACE6B,IAAAA,KAAU,CACRG,MAAO,eACPG,KAAM,yCACNJ,KAAM,SAGZ,CAAE,MAAOK,GAAQ,IAADC,EAAAC,EACdT,IAAAA,KAAU,CACRG,MAAO,QACPG,MAAoB,QAAdE,EAAAD,EAAMrB,gBAAQ,IAAAsB,GAAM,QAANC,EAAdD,EAAgBV,YAAI,IAAAW,OAAN,EAAdA,EAAsBC,UAAW,wBACvCR,KAAM,SAEV,KAkBE1B,EAdcmC,MAClB,MAAMrB,EAAeE,EAAAA,EAAQoB,IAAI,SACjC,GAAItB,EACF,IAEE,OADqBuB,KAAKvB,EAE5B,CAAE,MAAOiB,GAEP,OADAO,QAAQP,MAAM,0BAA2BA,GAClC,IACT,CAEF,OAAO,IAAI,EAGCI,GAGd,OAFAG,QAAQC,IAAI,iBAAkBvC,IAG5BwC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,aAAYC,SAAA,EACzBF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,iBAAgBC,SAAA,EAC7BF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,eAAcC,SAAA,EAC3BC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,WACJC,EAAAA,EAAAA,KAAA,KAAAD,SAAG,gDAELF,EAAAA,EAAAA,MAAA,QAAMnC,SAAUR,EAAO+C,aAAaF,SAAA,EAClCF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,wBAAuBC,SAAA,EACpCC,EAAAA,EAAAA,KAAA,KAAGF,UAAU,gBACbE,EAAAA,EAAAA,KAAA,SACEE,KAAK,OACLC,GAAG,QACHC,KAAK,QACLC,YAAY,QACZ5C,UAAQ,EACR6C,SAAUpD,EAAOqD,aACjBC,OAAQtD,EAAOuD,WACfC,MAAOxD,EAAOU,OAAOP,QAExBH,EAAOyD,QAAQtD,OAASH,EAAO0D,OAAOvD,OAC/C2C,EAAAA,EAAAA,KAAA,OAAKF,UAAU,QAAOC,SAAE7C,EAAO0D,OAAOvD,QACpC,SAGMwC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,wBAAuBC,SAAA,EACpCC,EAAAA,EAAAA,KAAA,KAAGF,UAAU,gBACbE,EAAAA,EAAAA,KAAA,SACEE,KAAK,WACLC,GAAG,WACHC,KAAK,WACLC,YAAY,WACZ5C,UAAQ,EACR6C,SAAUpD,EAAOqD,aACjBC,OAAQtD,EAAOuD,WACfC,MAAOxD,EAAOU,OAAON,WAEvBJ,EAAOyD,QAAQrD,UAAYJ,EAAO0D,OAAOtD,UACzC0C,EAAAA,EAAAA,KAAA,OAAKF,UAAU,QAAOC,SAAE7C,EAAO0D,OAAOtD,WAClC,SAEN0C,EAAAA,EAAAA,KAAA,UAAQE,KAAK,SAASJ,UAAU,YAAWC,SAAC,iBAWhDC,EAAAA,EAAAA,KAAA,SAAAD,SAAQ,+5GA6Jd,C","sources":["Pages/Security/Login.jsx"],"sourcesContent":["import React from 'react';\r\nimport { useFormik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport axios from 'axios';\r\nimport Swal from 'sweetalert2';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport Cookies from 'js-cookie';\r\n\r\nfunction Login() {\r\n  const navigate = useNavigate();\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      email: '',\r\n      password: '',\r\n    },\r\n    validationSchema: Yup.object({\r\n      email: Yup.string().required('email is required.'),\r\n      password: Yup.string().required('Password is required.'),\r\n    }),\r\n    onSubmit: async (values, { resetForm }) => {\r\n      try {\r\n        const response = await axios.post('https://localhost:7009/api/Home/signin', values);\r\n        if (response.status === 200) {\r\n          const encodedEmail = btoa(values.email);\r\n\r\n          // Set the encoded email in a cookie with a 24-hour expiry\r\n          Cookies.set('xyzra', encodedEmail, { expires: 1, secure: true });\r\n         // After successful login\r\n           localStorage.setItem('jwt_token', response.data.token); // or use Cookies.set('jwt_token', response.data.token);\r\n          Swal.fire({\r\n            position: 'center',\r\n            icon: 'success',\r\n            title: 'Login Successful',\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n          });\r\n          resetForm();\r\n      \r\n        //  const userId = response.data.userId;\r\n          navigate(`/admindashboard`); \r\n      \r\n        } else {\r\n          Swal.fire({\r\n            title: 'Login Failed',\r\n            text: 'Invalid credentials. Please try again.',\r\n            icon: 'error',\r\n          });\r\n        }\r\n      } catch (error) {\r\n        Swal.fire({\r\n          title: 'Error',\r\n          text: error.response?.data?.message || 'Something went wrong.',\r\n          icon: 'error',\r\n        });\r\n      }\r\n    }\r\n  });\r\n\r\n  const decodeEmail = () => {\r\n    const encodedEmail = Cookies.get('xyzra');\r\n    if (encodedEmail) {\r\n      try {\r\n        const decodedEmail = atob(encodedEmail);\r\n        return decodedEmail;\r\n      } catch (error) {\r\n        console.error('Failed to decode email:', error);\r\n        return null;\r\n      }\r\n    }\r\n    return null;\r\n  };\r\n\r\n  const email = decodeEmail();\r\n  console.log('Decoded Email:', email);\r\n\r\n  return (\r\n    <div className=\"login-page\">\r\n      <div className=\"form-container\">\r\n        <div className=\"login-header\">\r\n          <h1>Login</h1>\r\n          <p>Welcome back! Please login to continue.</p>\r\n        </div>\r\n        <form onSubmit={formik.handleSubmit}>\r\n          <div className=\"form-group input-icon\">\r\n            <i className=\"fa fa-user\"></i>\r\n            <input\r\n              type=\"text\"\r\n              id=\"email\"\r\n              name=\"email\"\r\n              placeholder=\"Email\"\r\n              required\r\n              onChange={formik.handleChange}\r\n              onBlur={formik.handleBlur}\r\n              value={formik.values.email}\r\n            />\r\n          {formik.touched.email && formik.errors.email ? (\r\n  <div className=\"error\">{formik.errors.email}</div>\r\n) : null}\r\n\r\n          </div>\r\n          <div className=\"form-group input-icon\">\r\n            <i className=\"fa fa-lock\"></i>\r\n            <input\r\n              type=\"password\"\r\n              id=\"password\"\r\n              name=\"password\"\r\n              placeholder=\"Password\"\r\n              required\r\n              onChange={formik.handleChange}\r\n              onBlur={formik.handleBlur}\r\n              value={formik.values.password}\r\n            />\r\n           {formik.touched.password && formik.errors.password ? (\r\n            <div className=\"error\">{formik.errors.password}</div>\r\n            ) : null}\r\n          </div>\r\n          <button type=\"submit\" className=\"btn-login\">\r\n            Login\r\n          </button>\r\n          {/* <div className=\"login-prompt\">\r\n            <p>\r\n              Don't have an account? <a href=\"/signup\">Signup</a>\r\n            </p>\r\n          </div> */}\r\n        </form>\r\n      </div>\r\n\r\n      <style>{`\r\n      .error {\r\n    color: red;\r\n    font-size: 0.9rem;\r\n    margin-top: 5px;\r\n  }\r\n        .login-prompt {\r\n          margin-top: 20px;\r\n          text-align: center;\r\n        }\r\n\r\n        .login-prompt a {\r\n          color: #3498db;\r\n          text-decoration: none;\r\n          font-weight: 600;\r\n        }\r\n\r\n        .login-prompt a:hover {\r\n          text-decoration: underline;\r\n        }\r\n   \r\n        * {\r\n          margin: 0;\r\n          padding: 0;\r\n          box-sizing: border-box;\r\n        }\r\n\r\n        body {\r\n          font-family: 'Poppins', Arial, sans-serif;\r\n          background: linear-gradient(135deg, #3498db, #8e44ad);\r\n          display: flex;\r\n          justify-content: center;\r\n          align-items: center;\r\n          height: 100vh;\r\n          overflow: hidden;\r\n        }\r\n\r\n        .form-container {\r\n          width: 100%;\r\n          top: 21px;\r\n          position: relative;\r\n          margin: 0px;\r\n          padding: 55px;\r\n          background: linear-gradient(135deg, #ffffff, #f9f9f9);\r\n          border-radius: 12px;\r\n          box-shadow: 0 6px 15px rgba(0, 0, 0, 0.1);\r\n        }\r\n\r\n        .login-header {\r\n          text-align: center;\r\n          margin-bottom: 20px;\r\n        }\r\n\r\n        h1 {\r\n          font-size: 2rem;\r\n          color: #333;\r\n          margin-bottom: 10px;\r\n        }\r\n\r\n        p {\r\n          font-size: 0.9rem;\r\n          color: #666;\r\n          margin-bottom: 20px;\r\n        }\r\n\r\n        .form-group {\r\n          position: relative;\r\n          margin-bottom: 15px;\r\n        }\r\n\r\n        .input-icon input {\r\n          width: 100%;\r\n          padding: 12px 15px 12px 40px; /* Adjusted padding for icon */\r\n          border: 1px solid #ddd;\r\n          border-radius: 6px;\r\n          font-size: 0.9rem;\r\n          transition: border-color 0.3s ease-in-out;\r\n        }\r\n\r\n        .input-icon i {\r\n          position: absolute;\r\n          left: 10px;\r\n          top: 50%;\r\n          transform: translateY(-50%);\r\n          font-size: 1.2rem;\r\n          color: #888;\r\n        }\r\n\r\n        input:focus {\r\n          border-color: #3498db;\r\n          outline: none;\r\n        }\r\n\r\n        .btn-login {\r\n          width: 100%;\r\n          padding: 12px 15px;\r\n          background: linear-gradient(135deg, #8e44ad, #3498db);\r\n          color: white;\r\n          border: none;\r\n          border-radius: 6px;\r\n          font-size: 1rem;\r\n          cursor: pointer;\r\n          transition: transform 0.2s, background 0.3s;\r\n        }\r\n\r\n        .btn-login:hover {\r\n          transform: scale(1.05);\r\n          background: linear-gradient(135deg, #3498db, #8e44ad);\r\n        }\r\n\r\n        .extra {\r\n          margin-top: 15px;\r\n        }\r\n\r\n        .extra a {\r\n          color: #3498db;\r\n          text-decoration: none;\r\n        }\r\n\r\n        .extra a:hover {\r\n          text-decoration: underline;\r\n        }\r\n\r\n        @keyframes fade-in {\r\n          to {\r\n            opacity: 1;\r\n            transform: translateY(0);\r\n          }\r\n        }\r\n\r\n        @keyframes slide-in {\r\n          from {\r\n            transform: translateY(-100px);\r\n            opacity: 0;\r\n          }\r\n          to {\r\n            transform: translateY(0);\r\n            opacity: 1;\r\n          }\r\n        }\r\n\r\n        @media (max-width: 768px) {\r\n          .login-box {\r\n            padding: 20px;\r\n          }\r\n\r\n          h1 {\r\n            font-size: 1.5rem;\r\n          }\r\n\r\n          p {\r\n            font-size: 0.8rem;\r\n          }\r\n        }\r\n      `}</style>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n"],"names":["navigate","useNavigate","formik","useFormik","initialValues","email","password","validationSchema","Yup","required","onSubmit","async","values","_ref","resetForm","response","axios","post","status","encodedEmail","btoa","Cookies","set","expires","secure","localStorage","setItem","data","token","Swal","position","icon","title","showConfirmButton","timer","text","error","_error$response","_error$response$data","message","decodeEmail","get","atob","console","log","_jsxs","className","children","_jsx","handleSubmit","type","id","name","placeholder","onChange","handleChange","onBlur","handleBlur","value","touched","errors"],"sourceRoot":""}